@model IEnumerable<Smart_Electrician_Support_System.ViewModels.EmployeeViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_ManagementDashboardLayout.cshtml";
}



<div class="card">
    <div class="card-header">
        <h1>Manage Employees</h1>
    </div>
    <div class="card-body">
        <div class="row">
            @await Html.PartialAsync("CreatePartial", new Smart_Electrician_Support_System.ViewModels.EmployeeViewModel())
        </div>
        <hr />
        <div class="row">
            <div class="col-md col-lg col-sm col-xs-12">
                <table class="table table-striped table-bordered nowrap" style="width:100%" id="IndexTable">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.EmpID)
                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.EmpCat_ID)*@ Category
                            </th>
                            <th>
                                Full Name
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Gender)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.DoB)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.NIC)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Email)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.Address)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.Contact)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Status)
                            </th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EmpID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EmpCat_ID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.fName)

                                    @Html.DisplayFor(modelItem => item.lName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Gender)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.DoB)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.NIC)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.Address)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.Contact)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.EmpID"><i class="fas fa-edit"></i></a> |
                                    <a asp-action="Details" asp-route-id="@item.EmpID"><i class="fas fa-info-circle"></i></a> |
                                    <a onclick="ConfirmDelete('@item.EmpID')" class="btn btn-danger btn-circle btn-sm">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {
        var table = $('#IndexTable').DataTable({
            responsive: true
        });

        new $.fn.dataTable.FixedHeader(table);
    });


    function ConfirmDelete(e) {
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: "/Employee/Delete",
                    data: { id: e },
                    success: function (result) {
                        if (result == "Success") {
                            swalWithBootstrapButtons.fire(
                                'Success',
                                'Your Data is Deleted :)',
                                'Success'
                            ).then((res) => {
                                if (res.isConfirmed) {
                                    location.reload();
                                }
                            })
                        }
                        else {
                            swalWithBootstrapButtons.fire(
                                'Error',
                                'Your Data is safe :)',
                                'error'
                            )
                        }
                    }
                })

            }
            else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                    'Cancelled',
                    'Your data is safe :)',
                    'error'
                )
            }
        })
    }
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}